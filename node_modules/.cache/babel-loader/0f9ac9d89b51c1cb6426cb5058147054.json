{"ast":null,"code":"import addresses from 'config/constants/contracts';\nconst chainId = process.env.REACT_APP_CHAIN_ID;\n\nconst getUrl = (tokenAddresses, liquidityUrlPathParts) => {\n  const isLeekToken = addresses.cake[chainId] === tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  const wmatic = addresses.wbnb[chainId];\n  let token1 = liquidityUrlPathParts.split(\"/\")[0];\n  let token2 = liquidityUrlPathParts.split(\"/\")[1];\n\n  if (token1 === wmatic) {\n    token1 = \"ETH\";\n  } else if (token2 === wmatic) {\n    token2 = \"ETH\";\n  }\n\n  if (chainId === \"80001\") {\n    return `https://cryptoleek-team.github.io/leekdaoswap-mumbai-testnet/#/add/${token1}/${token2}`;\n  }\n\n  return isLeekToken ? `https://exchange.leekdao.xyz/#/add/${token1}/${token2}` : `https://app.sushi.com/add/${token1}/${token2}`;\n};\n\nexport default getUrl;","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/utils/getLPUrl.ts"],"names":["addresses","chainId","process","env","REACT_APP_CHAIN_ID","getUrl","tokenAddresses","liquidityUrlPathParts","isLeekToken","cake","wmatic","wbnb","token1","split","token2"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;;AAEA,MAAMC,MAAM,GAAG,CAACC,cAAD,EAAiBC,qBAAjB,KAA2C;AACxD,QAAMC,WAAW,GAAGR,SAAS,CAACS,IAAV,CAAeR,OAAf,MAA4BK,cAAc,CAACJ,OAAO,CAACC,GAAR,CAAYC,kBAAb,CAA9D;AACA,QAAMM,MAAM,GAAGV,SAAS,CAACW,IAAV,CAAeV,OAAf,CAAf;AAEA,MAAIW,MAAM,GAAGL,qBAAqB,CAACM,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAb;AACA,MAAIC,MAAM,GAAGP,qBAAqB,CAACM,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAb;;AAEA,MAAID,MAAM,KAAKF,MAAf,EAAuB;AACrBE,IAAAA,MAAM,GAAG,KAAT;AACD,GAFD,MAEO,IAAIE,MAAM,KAAKJ,MAAf,EAAuB;AAC5BI,IAAAA,MAAM,GAAG,KAAT;AACD;;AAED,MAAIb,OAAO,KAAK,OAAhB,EAAyB;AACvB,WAAQ,sEAAqEW,MAAO,IAAGE,MAAO,EAA9F;AACD;;AAED,SAAON,WAAW,GAAI,sCAAqCI,MAAO,IAAGE,MAAO,EAA1D,GAA+D,6BAA4BF,MAAO,IAAGE,MAAO,EAA9H;AACD,CAlBD;;AAoBA,eAAeT,MAAf","sourcesContent":["import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst getUrl = (tokenAddresses, liquidityUrlPathParts) => {\n  const isLeekToken = addresses.cake[chainId] === tokenAddresses[process.env.REACT_APP_CHAIN_ID]\n  const wmatic = addresses.wbnb[chainId]\n\n  let token1 = liquidityUrlPathParts.split(\"/\")[0]\n  let token2 = liquidityUrlPathParts.split(\"/\")[1]\n\n  if (token1 === wmatic) {\n    token1 = \"ETH\";\n  } else if (token2 === wmatic) {\n    token2 = \"ETH\";\n  }\n\n  if (chainId === \"80001\") {\n    return `https://cryptoleek-team.github.io/leekdaoswap-mumbai-testnet/#/add/${token1}/${token2}`\n  }\n\n  return isLeekToken ? `https://exchange.leekdao.xyz/#/add/${token1}/${token2}` : `https://app.sushi.com/add/${token1}/${token2}`\n}\n\nexport default getUrl"]},"metadata":{},"sourceType":"module"}