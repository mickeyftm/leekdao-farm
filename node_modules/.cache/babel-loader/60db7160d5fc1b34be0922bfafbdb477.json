{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Home/components/TokenVesting.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardBody, Heading, Text, Link, Button } from 'leek-uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport UnlockButton from 'components/UnlockButton';\nimport BigNumber from 'bignumber.js/bignumber';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { getVestingAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useVestingContract } from '../../../hooks/useContract';\nimport useRefresh from '../../../hooks/useRefresh';\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c = StyledCakeStats;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n_c2 = Row;\n\nconst TokenVesting = () => {\n  _s();\n\n  const [state, setState] = useState({\n    cliff: 0,\n    releaseTime: 0,\n    finalTime: 0,\n    nextReleaseTime: 0,\n    linearReleaseInterval: 0,\n    releaseCount: 0,\n    releaseAmount: 0,\n    remainingTokens: 0\n  });\n  const {\n    fastRefresh\n  } = useRefresh();\n  const {\n    account\n  } = useWallet();\n  const contract = useVestingContract(getVestingAddress());\n  useEffect(() => {\n    const fetchVestingInfo = async () => {\n      const [cliff, releaseTime, finalTime, nextReleaseTime, linearReleaseInterval, releaseCount, releaseAmount, remainingTokens] = await Promise.all([contract.methods.cliff().call(), contract.methods.releaseTime().call(), contract.methods.finalTime().call(), contract.methods.nextReleaseTime().call(), contract.methods.linearReleaseInterval().call(), contract.methods.releaseTotalCount().call(), contract.methods.releaseAmount().call(), contract.methods.remainingTokens().call()]);\n      setState({\n        cliff,\n        releaseTime,\n        finalTime,\n        nextReleaseTime,\n        linearReleaseInterval,\n        releaseCount,\n        releaseAmount,\n        remainingTokens\n      });\n    };\n\n    fetchVestingInfo();\n  }, [contract, setState, fastRefresh]);\n  const releaseTime = moment.utc(Number(state.releaseTime) * 1000).format('MMMM Do YYYY, HH:mm');\n  const finalTime = moment.utc(Number(state.finalTime) * 1000).format('MMMM Do YYYY, HH:mm');\n  const nextReleaseTime = moment.utc(Number(state.nextReleaseTime) * 1000).format('MMMM Do YYYY, HH:mm');\n  const linearReleaseInterval = Number(state.linearReleaseInterval / 3600 / 24 / 30).toFixed().toString();\n  const releaseAmount = numeral(getBalanceNumber(new BigNumber(state.releaseAmount))).format('0,0');\n  const remainingTokens = numeral(getBalanceNumber(new BigNumber(state.remainingTokens))).format('0,0');\n\n  const claim = async () => {\n    await contract.methods.release().send({\n      from: account\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCakeStats, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"Leek Vesting Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Release Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"https://www.timeanddate.com/worldclock/timezone/utc\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            fontSize: \"14px\",\n            color: \"primary\",\n            children: [releaseTime, \" UTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Release End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"https://www.timeanddate.com/worldclock/timezone/utc\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            fontSize: \"14px\",\n            color: \"primary\",\n            children: [finalTime, \" UTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"Next LEEK Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"https://www.timeanddate.com/worldclock/timezone/utc\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            fontSize: \"14px\",\n            color: \"primary\",\n            children: [nextReleaseTime, \" UTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Release Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: [linearReleaseInterval, \" Month\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Release Count \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: state.releaseCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Release Every Time \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: [releaseAmount, \" LEEK\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: \"LEEK Locked \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"14px\",\n          children: [remainingTokens, \" LEEK\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n          fullWidth: true,\n          mt: \"8px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          mt: \"8px\",\n          onClick: claim,\n          fullWidth: true,\n          children: \"Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenVesting, \"22Gvq85l4hZD3BrIy6hKfbs0g1Y=\", false, function () {\n  return [useRefresh, useWallet, useVestingContract];\n});\n\n_c3 = TokenVesting;\nexport default TokenVesting;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCakeStats\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"TokenVesting\");","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Home/components/TokenVesting.tsx"],"names":["React","useState","useEffect","Card","CardBody","Heading","Text","Link","Button","useWallet","UnlockButton","BigNumber","styled","moment","numeral","getVestingAddress","getBalanceNumber","useVestingContract","useRefresh","StyledCakeStats","Row","div","TokenVesting","state","setState","cliff","releaseTime","finalTime","nextReleaseTime","linearReleaseInterval","releaseCount","releaseAmount","remainingTokens","fastRefresh","account","contract","fetchVestingInfo","Promise","all","methods","call","releaseTotalCount","utc","Number","format","toFixed","toString","claim","release","send","from"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, CardBody, Heading, Text, Link, Button } from 'leek-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\n\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { getVestingAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useVestingContract } from '../../../hooks/useContract'\nimport useRefresh from '../../../hooks/useRefresh'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst TokenVesting = () => {\n  const [state, setState] = useState({\n    cliff: 0,\n    releaseTime: 0,\n    finalTime: 0,\n    nextReleaseTime: 0,\n    linearReleaseInterval: 0,\n    releaseCount: 0,\n    releaseAmount: 0,\n    remainingTokens: 0,\n  })\n  const { fastRefresh } = useRefresh()\n  const { account } = useWallet()\n\n  const contract = useVestingContract(getVestingAddress())\n\n  useEffect(() => {\n    const fetchVestingInfo = async () => {\n      const [\n        cliff,\n        releaseTime,\n        finalTime,\n        nextReleaseTime,\n        linearReleaseInterval,\n        releaseCount,\n        releaseAmount,\n        remainingTokens,\n      ] = await Promise.all([\n        contract.methods.cliff().call(),\n        contract.methods.releaseTime().call(),\n        contract.methods.finalTime().call(),\n        contract.methods.nextReleaseTime().call(),\n        contract.methods.linearReleaseInterval().call(),\n        contract.methods.releaseTotalCount().call(),\n        contract.methods.releaseAmount().call(),\n        contract.methods.remainingTokens().call(),\n      ])\n\n      setState({\n        cliff,\n        releaseTime,\n        finalTime,\n        nextReleaseTime,\n        linearReleaseInterval,\n        releaseCount,\n        releaseAmount,\n        remainingTokens,\n      })\n    }\n    fetchVestingInfo()\n  }, [contract, setState, fastRefresh])\n\n  const releaseTime = moment.utc(Number(state.releaseTime) * 1000).format('MMMM Do YYYY, HH:mm')\n  const finalTime = moment.utc(Number(state.finalTime) * 1000).format('MMMM Do YYYY, HH:mm')\n  const nextReleaseTime = moment.utc(Number(state.nextReleaseTime) * 1000).format('MMMM Do YYYY, HH:mm')\n  const linearReleaseInterval = Number(state.linearReleaseInterval / 3600 / 24 / 30).toFixed().toString()\n  const releaseAmount = numeral(getBalanceNumber(new BigNumber(state.releaseAmount))).format('0,0')\n  const remainingTokens = numeral(getBalanceNumber(new BigNumber(state.remainingTokens))).format('0,0')\n\n  const claim = async () => {\n    await contract.methods.release().send({ from: account })\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Leek Vesting Info\n        </Heading>\n\n        <Row>\n          <Text fontSize=\"14px\">LEEK Release Start Time</Text>\n          <Link href=\"https://www.timeanddate.com/worldclock/timezone/utc\">\n            <Text bold fontSize=\"14px\" color=\"primary\">\n              {releaseTime} UTC\n            </Text>\n          </Link>\n        </Row>\n\n        <Row>\n          <Text fontSize=\"14px\">LEEK Release End Time</Text>\n          <Link href=\"https://www.timeanddate.com/worldclock/timezone/utc\">\n            <Text bold fontSize=\"14px\" color=\"primary\">\n              {finalTime} UTC\n            </Text>\n          </Link>\n        </Row>\n\n        <Row>\n          <Text fontSize=\"14px\">Next LEEK Release Date</Text>\n          <Link href=\"https://www.timeanddate.com/worldclock/timezone/utc\">\n            <Text bold fontSize=\"14px\" color=\"primary\">\n              {nextReleaseTime} UTC\n            </Text>\n          </Link>\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">LEEK Release Interval</Text>\n          <Text bold fontSize=\"14px\">\n            {linearReleaseInterval} Month\n          </Text>\n        </Row>\n\n        <Row>\n          <Text fontSize=\"14px\">LEEK Release Count </Text>\n          <Text bold fontSize=\"14px\">\n            {state.releaseCount}\n          </Text>\n        </Row>\n\n        <Row>\n          <Text fontSize=\"14px\">LEEK Release Every Time </Text>\n          <Text bold fontSize=\"14px\">\n            {releaseAmount} LEEK\n          </Text>\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">LEEK Locked </Text>\n          <Text bold fontSize=\"14px\">\n            {remainingTokens} LEEK\n          </Text>\n        </Row>\n\n        <div>\n          {!account ? (\n            <UnlockButton fullWidth mt=\"8px\" />\n          ) : (\n            <Button mt=\"8px\" onClick={claim} fullWidth>\n              Claim\n            </Button>\n          )}\n        </div>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default TokenVesting\n"]},"metadata":{},"sourceType":"module"}