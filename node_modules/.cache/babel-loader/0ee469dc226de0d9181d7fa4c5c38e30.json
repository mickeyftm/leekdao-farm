{"ast":null,"code":"'use strict';\n\nconst kindOf = require('kind-of');\n\nconst isStream = require('is-stream');\n\nconst {\n  isSource\n} = require('is-pull-stream');\n\nconst isBuffer = require('is-buffer');\n\nconst validateAddInput = input => {\n  // Buffer|ReadableStream|PullStream|File\n  const isPrimitive = obj => isBuffer(obj) || isStream.readable(obj) || isSource(obj) || kindOf(obj) === 'file'; // An object like { content?, path? }, where content isBufferOrStream and path isString\n\n\n  const isContentObject = obj => {\n    if (typeof obj !== 'object') return false; // path is optional if content is present\n\n    if (obj.content) return isPrimitive(obj.content); // path must be a non-empty string if no content\n\n    return Boolean(obj.path) && typeof obj.path === 'string';\n  }; // An input atom: a buffer, stream or content object\n\n\n  const isInput = obj => isPrimitive(obj) || isContentObject(obj);\n\n  if (isInput(input) || Array.isArray(input) && input.every(isInput)) {\n    return true;\n  } else {\n    throw new Error(`Input not supported. Expected Buffer|ReadableStream|PullStream|File|Array<Object> got ${kindOf(input)}. Check the documentation for more info https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/FILES.md#add`);\n  }\n};\n\nmodule.exports = validateAddInput;","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/node_modules/ipfs-utils/src/files/add-input-validation.js"],"names":["kindOf","require","isStream","isSource","isBuffer","validateAddInput","input","isPrimitive","obj","readable","isContentObject","content","Boolean","path","isInput","Array","isArray","every","Error","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAeF,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAMI,gBAAgB,GAAIC,KAAD,IAAW;AAClC;AACA,QAAMC,WAAW,GAAGC,GAAG,IAAIJ,QAAQ,CAACI,GAAD,CAAR,IAAiBN,QAAQ,CAACO,QAAT,CAAkBD,GAAlB,CAAjB,IAA2CL,QAAQ,CAACK,GAAD,CAAnD,IAA4DR,MAAM,CAACQ,GAAD,CAAN,KAAgB,MAAvG,CAFkC,CAIlC;;;AACA,QAAME,eAAe,GAAGF,GAAG,IAAI;AAC7B,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAP,CADA,CAE7B;;AACA,QAAIA,GAAG,CAACG,OAAR,EAAiB,OAAOJ,WAAW,CAACC,GAAG,CAACG,OAAL,CAAlB,CAHY,CAI7B;;AACA,WAAOC,OAAO,CAACJ,GAAG,CAACK,IAAL,CAAP,IAAqB,OAAOL,GAAG,CAACK,IAAX,KAAoB,QAAhD;AACD,GAND,CALkC,CAalC;;;AACA,QAAMC,OAAO,GAAGN,GAAG,IAAID,WAAW,CAACC,GAAD,CAAX,IAAoBE,eAAe,CAACF,GAAD,CAA1D;;AAEA,MAAIM,OAAO,CAACR,KAAD,CAAP,IAAmBS,KAAK,CAACC,OAAN,CAAcV,KAAd,KAAwBA,KAAK,CAACW,KAAN,CAAYH,OAAZ,CAA/C,EAAsE;AACpE,WAAO,IAAP;AACD,GAFD,MAEO;AACL,UAAM,IAAII,KAAJ,CAAW,yFAAwFlB,MAAM,CAACM,KAAD,CAAQ,sHAAjH,CAAN;AACD;AACF,CArBD;;AAuBAa,MAAM,CAACC,OAAP,GAAiBf,gBAAjB","sourcesContent":["'use strict'\n\nconst kindOf = require('kind-of')\nconst isStream = require('is-stream')\nconst { isSource } = require('is-pull-stream')\nconst isBuffer = require('is-buffer')\n\nconst validateAddInput = (input) => {\n  // Buffer|ReadableStream|PullStream|File\n  const isPrimitive = obj => isBuffer(obj) || isStream.readable(obj) || isSource(obj) || kindOf(obj) === 'file'\n\n  // An object like { content?, path? }, where content isBufferOrStream and path isString\n  const isContentObject = obj => {\n    if (typeof obj !== 'object') return false\n    // path is optional if content is present\n    if (obj.content) return isPrimitive(obj.content)\n    // path must be a non-empty string if no content\n    return Boolean(obj.path) && typeof obj.path === 'string'\n  }\n\n  // An input atom: a buffer, stream or content object\n  const isInput = obj => isPrimitive(obj) || isContentObject(obj)\n\n  if (isInput(input) || (Array.isArray(input) && input.every(isInput))) {\n    return true\n  } else {\n    throw new Error(`Input not supported. Expected Buffer|ReadableStream|PullStream|File|Array<Object> got ${kindOf(input)}. Check the documentation for more info https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/FILES.md#add`)\n  }\n}\n\nmodule.exports = validateAddInput\n"]},"metadata":{},"sourceType":"script"}