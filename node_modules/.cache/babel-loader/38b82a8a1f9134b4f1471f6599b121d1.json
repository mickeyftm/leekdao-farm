{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Lottery/components/Modal/WinnerNumberInputModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, Flex, Input, Heading, useModal } from 'leek-uikit';\nimport { useLottery } from 'hooks/useContract';\nimport LuckyDrawTransactionModal from \"./LuckyDrawTransactionModal\";\nimport ConfirmationPendingContent from './ConfirmationPendingModal';\nimport { store } from \"../../store/store\";\nimport { GET_LUCKY_DRAW_TRANSACTION_HASH, RESET_TO_DEFAULT_STATE } from '../../store/reducer';\n\nconst WinnerNumberInputModal = ({\n  onDismiss,\n  account\n}) => {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [onPresentLuckyDrawTransactionModal] = useModal( /*#__PURE__*/_jsxDEV(LuckyDrawTransactionModal, {\n    onDismiss: () => {\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 59\n  }, this));\n  const [onPresentConfrimationModal] = useModal( /*#__PURE__*/_jsxDEV(ConfirmationPendingContent, {\n    onDismiss: () => {\n      return null;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 51\n  }, this));\n  const contract = useLottery();\n  const isNumberValid = number > 0;\n\n  const submitRequest = async () => {\n    onPresentConfrimationModal();\n    store.dispatch({\n      type: RESET_TO_DEFAULT_STATE\n    });\n    const result = await contract.methods.luckyDraw(number).send({\n      from: account\n    });\n\n    if (result) {\n      const action = {\n        type: GET_LUCKY_DRAW_TRANSACTION_HASH,\n        luckyDrawTx: result.transactionHash\n      };\n      store.dispatch(action);\n      onPresentLuckyDrawTransactionModal();\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Set Winners Number\",\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        color: \"primary\",\n        size: \"md\",\n        mb: \"10px\",\n        children: \"Winners Number of this Round:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Winners Number...\",\n          type: \"number\",\n          value: number,\n          onChange: e => setNumber(parseInt(e.currentTarget.value) || 0),\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: submitRequest,\n        mt: \"20px\",\n        disabled: !isNumberValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        mt: \"20px\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WinnerNumberInputModal, \"9KSdkd80FHZasAVlAFwk/T5mCLU=\", false, function () {\n  return [useModal, useModal, useLottery];\n});\n\n_c = WinnerNumberInputModal;\nexport default WinnerNumberInputModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WinnerNumberInputModal\");","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Lottery/components/Modal/WinnerNumberInputModal.tsx"],"names":["React","useState","Button","Modal","Flex","Input","Heading","useModal","useLottery","LuckyDrawTransactionModal","ConfirmationPendingContent","store","GET_LUCKY_DRAW_TRANSACTION_HASH","RESET_TO_DEFAULT_STATE","WinnerNumberInputModal","onDismiss","account","number","setNumber","onPresentLuckyDrawTransactionModal","onPresentConfrimationModal","contract","isNumberValid","submitRequest","dispatch","type","result","methods","luckyDraw","send","from","action","luckyDrawTx","transactionHash","e","parseInt","currentTarget","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,QAA9C,QAA8D,YAA9D;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,0BAAP,MAAuC,4BAAvC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,+BAAT,EAA0CC,sBAA1C,QAAwE,qBAAxE;;AAOA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAoD;AAAA;;AAC/E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACkB,kCAAD,IAAuCZ,QAAQ,eAAC,QAAC,yBAAD;AAA2B,IAAA,SAAS,EAAE,MAAM;AAAE,aAAO,IAAP;AAAa;AAA3D;AAAA;AAAA;AAAA;AAAA,UAAD,CAArD;AACA,QAAM,CAACa,0BAAD,IAA+Bb,QAAQ,eAAC,QAAC,0BAAD;AAA4B,IAAA,SAAS,EAAE,MAAM;AAAE,aAAO,IAAP;AAAa;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAD,CAA7C;AACA,QAAMc,QAAQ,GAAGb,UAAU,EAA3B;AACA,QAAMc,aAAa,GAAGL,MAAM,GAAG,CAA/B;;AAEA,QAAMM,aAAa,GAAG,YAAY;AAC9BH,IAAAA,0BAA0B;AAC1BT,IAAAA,KAAK,CAACa,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAf;AACA,UAAMa,MAAM,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiBC,SAAjB,CAA2BX,MAA3B,EAAmCY,IAAnC,CAAwC;AAAEC,MAAAA,IAAI,EAAEd;AAAR,KAAxC,CAArB;;AACA,QAAIU,MAAJ,EAAY;AACR,YAAMK,MAAM,GAAG;AACXN,QAAAA,IAAI,EAAEb,+BADK;AAEXoB,QAAAA,WAAW,EAAEN,MAAM,CAACO;AAFT,OAAf;AAIAtB,MAAAA,KAAK,CAACa,QAAN,CAAeO,MAAf;AACAZ,MAAAA,kCAAkC;AACrC;;AACD,WAAO,IAAP;AAEH,GAdD;;AAeA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAC,oBAAb;AAAkC,IAAA,SAAS,EAAEJ,SAA7C;AAAA,4BACI;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,SAAf;AAAyB,QAAA,IAAI,EAAC,IAA9B;AAAmC,QAAA,EAAE,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,WAAW,EAAC,yBADhB;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAEE,MAHX;AAII,UAAA,QAAQ,EAAGiB,CAAD,IAAOhB,SAAS,CAACiB,QAAQ,CAACD,CAAC,CAACE,aAAF,CAAgBC,KAAjB,CAAR,IAAmC,CAApC,CAJ9B;AAKI,UAAA,GAAG,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEd,aAAjB;AAAgC,QAAA,EAAE,EAAC,MAAnC;AAA0C,QAAA,QAAQ,EAAE,CAACD,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEP,SAArC;AAAgD,QAAA,EAAE,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/CD;;GAAMD,sB;UAE2CP,Q,EACRA,Q,EACpBC,U;;;KAJfM,sB;AAiDN,eAAeA,sBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Modal, Flex, Input, Heading, useModal } from 'leek-uikit'\nimport { useLottery } from 'hooks/useContract'\nimport LuckyDrawTransactionModal from \"./LuckyDrawTransactionModal\"\nimport ConfirmationPendingContent from './ConfirmationPendingModal'\nimport { store } from \"../../store/store\"\nimport { GET_LUCKY_DRAW_TRANSACTION_HASH, RESET_TO_DEFAULT_STATE } from '../../store/reducer'\n\ntype WinnerNumberInputProps = {\n    onDismiss: () => void\n    account: string\n}\n\nconst WinnerNumberInputModal = ({ onDismiss, account }: WinnerNumberInputProps) => {\n    const [number, setNumber] = useState(0)\n    const [onPresentLuckyDrawTransactionModal] = useModal(<LuckyDrawTransactionModal onDismiss={() => { return null }} />)\n    const [onPresentConfrimationModal] = useModal(<ConfirmationPendingContent onDismiss={() => { return null }} />)\n    const contract = useLottery();\n    const isNumberValid = number > 0\n\n    const submitRequest = async () => {\n        onPresentConfrimationModal();\n        store.dispatch({ type: RESET_TO_DEFAULT_STATE })\n        const result = await contract.methods.luckyDraw(number).send({ from: account })\n        if (result) {\n            const action = {\n                type: GET_LUCKY_DRAW_TRANSACTION_HASH,\n                luckyDrawTx: result.transactionHash,\n            }\n            store.dispatch(action);\n            onPresentLuckyDrawTransactionModal();\n        }\n        return null;\n\n    }\n    return (\n        <Modal title=\"Set Winners Number\" onDismiss={onDismiss}>\n            <div>\n                <Heading color=\"primary\" size=\"md\" mb=\"10px\">Winners Number of this Round:</Heading>\n                <div>\n                    <Input\n                        placeholder=\"Enter Winners Number...\"\n                        type=\"number\"\n                        value={number}\n                        onChange={(e) => setNumber(parseInt(e.currentTarget.value) || 0)}\n                        min=\"0\" />\n                </div>\n            </div>\n\n\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                <Button onClick={submitRequest} mt=\"20px\" disabled={!isNumberValid}>\n                    Submit\n                </Button>\n                <Button variant=\"secondary\" onClick={onDismiss} mt=\"20px\" >\n                    Close\n                </Button>\n            </Flex>\n        </Modal>\n    )\n}\n\nexport default WinnerNumberInputModal"]},"metadata":{},"sourceType":"module"}