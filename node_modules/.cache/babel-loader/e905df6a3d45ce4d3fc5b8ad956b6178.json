{"ast":null,"code":"import { ADMIN_ADDRESS } from 'config/constants/voting';\nimport { ProposalType } from 'state/types';\nexport const isCoreProposal = author => {\n  return ADMIN_ADDRESS.findIndex(item => item === author) > -1;\n};\nexport const filterProposalsByType = (proposals, proposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter(proposal => !isCoreProposal(proposal.author));\n\n    case ProposalType.CORE:\n      return proposals.filter(proposal => isCoreProposal(proposal.author));\n\n    case ProposalType.ALL:\n    default:\n      return proposals;\n  }\n};","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Voting/helper.ts"],"names":["ADMIN_ADDRESS","ProposalType","isCoreProposal","author","findIndex","item","filterProposalsByType","proposals","proposalType","COMMUNITY","filter","proposal","CORE","ALL"],"mappings":"AAAA,SAASA,aAAT,QAA8B,yBAA9B;AACA,SAAmBC,YAAnB,QAAuC,aAAvC;AAEA,OAAO,MAAMC,cAAc,GAAIC,MAAD,IAAoB;AAC9C,SAAOH,aAAa,CAACI,SAAd,CAAwBC,IAAI,IAAIA,IAAI,KAAKF,MAAzC,IAAmD,CAAC,CAA3D;AACH,CAFM;AAIP,OAAO,MAAMG,qBAAqB,GAAG,CAACC,SAAD,EAAwBC,YAAxB,KAAuD;AACxF,UAAQA,YAAR;AACI,SAAKP,YAAY,CAACQ,SAAlB;AACI,aAAOF,SAAS,CAACG,MAAV,CAAkBC,QAAD,IAAc,CAACT,cAAc,CAACS,QAAQ,CAACR,MAAV,CAA9C,CAAP;;AACJ,SAAKF,YAAY,CAACW,IAAlB;AACI,aAAOL,SAAS,CAACG,MAAV,CAAkBC,QAAD,IAAcT,cAAc,CAACS,QAAQ,CAACR,MAAV,CAA7C,CAAP;;AACJ,SAAKF,YAAY,CAACY,GAAlB;AACA;AACI,aAAON,SAAP;AAPR;AASH,CAVM","sourcesContent":["import { ADMIN_ADDRESS } from 'config/constants/voting'\nimport { Proposal, ProposalType } from 'state/types'\n\nexport const isCoreProposal = (author: string) => {\n    return ADMIN_ADDRESS.findIndex(item => item === author) > -1\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n    switch (proposalType) {\n        case ProposalType.COMMUNITY:\n            return proposals.filter((proposal) => !isCoreProposal(proposal.author))\n        case ProposalType.CORE:\n            return proposals.filter((proposal) => isCoreProposal(proposal.author))\n        case ProposalType.ALL:\n        default:\n            return proposals\n    }\n}\n"]},"metadata":{},"sourceType":"module"}