{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { Modal, Text, LinkExternal, Flex } from 'leek-uikit';\nimport useI18n from 'hooks/useI18n';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers';\nimport getUrl from \"utils/getLPUrl\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`;\n_c = Grid;\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`;\n_c2 = GridItem;\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`;\n_c3 = Description;\n\nconst ApyCalculatorModal = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAdresses,\n    quoteTokenSymbol,\n    tokenAddresses\n  });\n  const farmApy = apy.times(new BigNumber(100)).toNumber();\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy,\n    cakePrice\n  });\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy,\n    cakePrice\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"ROI\",\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(999, 'Timeframe')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(999, 'ROI')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          bold: true,\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          mb: \"20px\",\n          children: TranslateString(999, 'LEEK per $1000')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"1d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand1D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand1D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"7d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand7D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand7D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"30d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand30D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand30D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"365d(APY)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: [apyModalRoi({\n            amountEarned: cakeEarnedPerThousand365D,\n            amountInvested: oneThousandDollarsWorthOfCake\n          }), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: cakeEarnedPerThousand365D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      fontSize: \"12px\",\n      color: \"textSubtle\",\n      children: TranslateString(999, 'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n        href: getUrl(tokenAddresses, liquidityUrlPathParts),\n        children: [TranslateString(999, 'Get'), \" \", lpLabel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApyCalculatorModal, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c4 = ApyCalculatorModal;\nexport default ApyCalculatorModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridItem\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"ApyCalculatorModal\");","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx"],"names":["React","BigNumber","styled","Modal","Text","LinkExternal","Flex","useI18n","getLiquidityUrlPathParts","calculateCakeEarnedPerThousandDollars","apyModalRoi","getUrl","Grid","div","GridItem","Description","ApyCalculatorModal","onDismiss","lpLabel","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","cakePrice","apy","TranslateString","liquidityUrlPathParts","farmApy","times","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","numberOfDays","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","amountEarned","amountInvested"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from 'leek-uikit'\nimport useI18n from 'hooks/useI18n'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { Address } from 'config/constants/types'\nimport getUrl from \"utils/getLPUrl\"\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'LEEK per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={getUrl(tokenAddresses, liquidityUrlPathParts)}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n"]},"metadata":{},"sourceType":"module"}