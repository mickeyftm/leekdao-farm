{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Lottery/components/LotteryCard/AllHistoryResultCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, CardHeader, ChevronDownIcon, Flex, Heading, Button, ChevronUpIcon, Text } from 'leek-uikit';\nimport Row, { AddressColumn, VotingPowerColumn } from '../General/Row';\nimport WinnersListRow from \"../General/WinnersListRow\";\nimport { useGetCurrentRound, useFetchWinnersAndRound } from '../../api';\nimport LoadingContent from '../General/LoadingContent';\nimport { loadingStore } from '../../store/store';\nconst LIST_PER_VIEW = 5;\n\nconst AllHistoryResultCard = () => {\n  _s();\n\n  const round = useGetCurrentRound();\n  const winnersList = useFetchWinnersAndRound(round).sort((itemA, itemB) => itemB.round - itemA.round);\n  const [showAll, setShowAll] = useState(false);\n  const displayList = showAll ? winnersList : winnersList.slice(0, LIST_PER_VIEW);\n  const {\n    isLoading\n  } = loadingStore.getState();\n\n  const handleClick = () => {\n    setShowAll(!showAll);\n  };\n\n  let comp;\n\n  if (!isLoading) {\n    if (displayList.length === 0) {\n      comp = /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        py: \"32px\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h5\",\n          children: \"No Winners found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    } else {\n      comp = displayList.map(item => /*#__PURE__*/_jsxDEV(WinnersListRow, {\n        address: item.address,\n        round: item.round\n      }, item.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this));\n    }\n  } else {\n    comp = /*#__PURE__*/_jsxDEV(LoadingContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Lucky Draw Winners History Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Total Winners: \", winnersList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(AddressColumn, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          bold: true,\n          children: \"Lucky Draw Winner Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VotingPowerColumn, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          textTransform: \"uppercase\",\n          bold: true,\n          children: \"Round No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), comp, !isLoading && displayList.length > 0 && /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      py: \"8px\",\n      px: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        variant: \"text\",\n        endIcon: showAll ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n          color: \"primary\",\n          width: \"21px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          color: \"primary\",\n          width: \"21px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this),\n        children: showAll ? \"Hide\" : \"See All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllHistoryResultCard, \"feE2/27Rlucv7xXUsdm4DiFj/cY=\", false, function () {\n  return [useGetCurrentRound, useFetchWinnersAndRound];\n});\n\n_c = AllHistoryResultCard;\nexport default AllHistoryResultCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllHistoryResultCard\");","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Lottery/components/LotteryCard/AllHistoryResultCard.tsx"],"names":["React","useState","Card","CardHeader","ChevronDownIcon","Flex","Heading","Button","ChevronUpIcon","Text","Row","AddressColumn","VotingPowerColumn","WinnersListRow","useGetCurrentRound","useFetchWinnersAndRound","LoadingContent","loadingStore","LIST_PER_VIEW","AllHistoryResultCard","round","winnersList","sort","itemA","itemB","showAll","setShowAll","displayList","slice","isLoading","getState","handleClick","comp","length","map","item","address"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Card,\n    CardHeader,\n    ChevronDownIcon,\n    Flex,\n    Heading,\n    Button,\n    ChevronUpIcon,\n    Text,\n} from 'leek-uikit'\nimport Row, { AddressColumn, VotingPowerColumn } from '../General/Row'\nimport WinnersListRow from \"../General/WinnersListRow\"\nimport { useGetCurrentRound, useFetchWinnersAndRound } from '../../api'\nimport LoadingContent from '../General/LoadingContent'\nimport { loadingStore } from '../../store/store'\n\nconst LIST_PER_VIEW = 5\n\nconst AllHistoryResultCard: React.FC = () => {\n    const round = useGetCurrentRound()\n    const winnersList = useFetchWinnersAndRound(round).sort((itemA, itemB) => itemB.round - itemA.round);\n    const [showAll, setShowAll] = useState(false)\n    const displayList = showAll ? winnersList : winnersList.slice(0, LIST_PER_VIEW)\n    const { isLoading } = loadingStore.getState()\n\n    const handleClick = () => {\n        setShowAll(!showAll)\n    }\n    let comp;\n\n    if (!isLoading) {\n        if (displayList.length === 0) {\n            comp = <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n                <Heading as=\"h5\">No Winners found</Heading>\n            </Flex>\n        } else {\n            comp = displayList.map((item) => (\n                <WinnersListRow key={item.address} address={item.address} round={item.round} />\n            ))\n        }\n    } else {\n        comp = <LoadingContent />\n    }\n\n    return (\n        <Card>\n            <CardHeader>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Heading>Lucky Draw Winners History Results</Heading>\n                    <Text>Total Winners: {winnersList.length}</Text>\n                </Flex>\n            </CardHeader>\n\n            <Row>\n                <AddressColumn>\n                    <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                        Lucky Draw Winner Address\n                    </Text>\n                </AddressColumn>\n                <VotingPowerColumn>\n                    <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                        Round No\n                    </Text>\n                </VotingPowerColumn>\n            </Row>\n            {comp}\n            {\n                !isLoading && displayList.length > 0 && (<Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n                    <Button\n                        onClick={handleClick}\n                        variant=\"text\"\n                        endIcon={\n                            showAll ? (\n                                <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                            ) : (\n                                <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                            )\n                        }\n                    >\n                        {showAll ? \"Hide\" : \"See All\"}\n                    </Button>\n                </Flex>)\n            }\n        </Card>\n    )\n}\n\nexport default AllHistoryResultCard"]},"metadata":{},"sourceType":"module"}