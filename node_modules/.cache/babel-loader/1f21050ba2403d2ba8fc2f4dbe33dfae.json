{"ast":null,"code":"'use strict';\n\nconst sort = require('stable');\n\nconst {\n  serialize\n} = require('../util.js');\n\nconst dagNodeUtil = require('./util.js');\n\nconst linkSort = dagNodeUtil.linkSort;\n\nconst DAGNode = require('./index.js');\n\nconst DAGLink = require('../dag-link');\n\nconst create = (data, links = []) => {\n  if (typeof data === 'string') {\n    data = Buffer.from(data);\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    throw new Error('Passed \\'data\\' is not a buffer or a string!');\n  }\n\n  links = links.map(link => {\n    return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link);\n  });\n  links = sort(links, linkSort);\n  const serialized = serialize({\n    Data: data,\n    Links: links\n  });\n  return new DAGNode(data, links, serialized.length);\n};\n\nmodule.exports = create;","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/node_modules/ipld-dag-pb/src/dag-node/create.js"],"names":["sort","require","serialize","dagNodeUtil","linkSort","DAGNode","DAGLink","create","data","links","Buffer","from","isBuffer","Error","map","link","isDAGLink","util","createDagLinkFromB58EncodedHash","serialized","Data","Links","length","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,YAAD,CAFX;;AAGA,MAAME,WAAW,GAAGF,OAAO,CAAC,WAAD,CAA3B;;AACA,MAAMG,QAAQ,GAAGD,WAAW,CAACC,QAA7B;;AACA,MAAMC,OAAO,GAAGJ,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAMK,OAAO,GAAGL,OAAO,CAAC,aAAD,CAAvB;;AAEA,MAAMM,MAAM,GAAG,CAACC,IAAD,EAAOC,KAAK,GAAG,EAAf,KAAsB;AACnC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAGE,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAP;AACD;;AAED,MAAI,CAACE,MAAM,CAACE,QAAP,CAAgBJ,IAAhB,CAAL,EAA4B;AAC1B,UAAM,IAAIK,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACDJ,EAAAA,KAAK,GAAGA,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAC1B,WAAOT,OAAO,CAACU,SAAR,CAAkBD,IAAlB,IAA0BA,IAA1B,GAAiCT,OAAO,CAACW,IAAR,CAAaC,+BAAb,CAA6CH,IAA7C,CAAxC;AACD,GAFO,CAAR;AAGAN,EAAAA,KAAK,GAAGT,IAAI,CAACS,KAAD,EAAQL,QAAR,CAAZ;AAEA,QAAMe,UAAU,GAAGjB,SAAS,CAAC;AAC3BkB,IAAAA,IAAI,EAAEZ,IADqB;AAE3Ba,IAAAA,KAAK,EAAEZ;AAFoB,GAAD,CAA5B;AAKA,SAAO,IAAIJ,OAAJ,CAAYG,IAAZ,EAAkBC,KAAlB,EAAyBU,UAAU,CAACG,MAApC,CAAP;AACD,CAnBD;;AAqBAC,MAAM,CAACC,OAAP,GAAiBjB,MAAjB","sourcesContent":["'use strict'\n\nconst sort = require('stable')\nconst {\n  serialize\n} = require('../util.js')\nconst dagNodeUtil = require('./util.js')\nconst linkSort = dagNodeUtil.linkSort\nconst DAGNode = require('./index.js')\nconst DAGLink = require('../dag-link')\n\nconst create = (data, links = []) => {\n  if (typeof data === 'string') {\n    data = Buffer.from(data)\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    throw new Error('Passed \\'data\\' is not a buffer or a string!')\n  }\n  links = links.map((link) => {\n    return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link)\n  })\n  links = sort(links, linkSort)\n\n  const serialized = serialize({\n    Data: data,\n    Links: links\n  })\n\n  return new DAGNode(data, links, serialized.length)\n}\n\nmodule.exports = create\n"]},"metadata":{},"sourceType":"script"}