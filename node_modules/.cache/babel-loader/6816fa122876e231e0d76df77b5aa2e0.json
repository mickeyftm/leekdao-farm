{"ast":null,"code":"const defaultState = {\n  luckyDrawTx: \"\",\n  error: \"\",\n  addressTx: \"\"\n};\nconst loadingState = {\n  isLoading: false\n};\nexport const GET_LUCKY_DRAW_TRANSACTION_HASH = 'GET_LUCKY_DRAW_TRANSACTION_HASH';\nexport const GET_ADDRESS_TRANSACTION_HASH = \"GET_ADDRESS_TRANSACTION_HASH\";\nexport const RESET_TO_DEFAULT_STATE = \"RESET_TO_DEFAULT_STATE\";\nexport const UPDATE_ERROR_MESSAGE = \"UPDATE_ERROR_MESSAGE\";\nexport const SET_LOADING_STATE_TRUE = \"SET_LOADING_STATE_TRUE\";\nexport const SET_LOADING_STATE_FALSE = \"SET_LOADING_STATE_FALSE\";\nexport const reducer = (state = defaultState, action) => {\n  if (action.type === GET_LUCKY_DRAW_TRANSACTION_HASH) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.luckyDrawTx = action.luckyDrawTx;\n    newState.addressTx = \"\";\n    newState.error = \"\";\n    return newState;\n  }\n\n  if (action.type === UPDATE_ERROR_MESSAGE) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.luckyDrawTx = \"\";\n    newState.addressTx = \"\";\n    newState.error = action.error;\n    return newState;\n  }\n\n  if (action.type === GET_ADDRESS_TRANSACTION_HASH) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.luckyDrawTx = \"\";\n    newState.addressTx = action.addressTx;\n    newState.error = action.error;\n    return newState;\n  }\n\n  if (action.type === RESET_TO_DEFAULT_STATE) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.luckyDrawTx = \"\";\n    newState.addressTx = \"\";\n    newState.error = \"\";\n    return newState;\n  }\n\n  return state;\n};\nexport const loadingReducer = (state = loadingState, action) => {\n  if (action.type === SET_LOADING_STATE_TRUE) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isLoading = true;\n    return newState;\n  }\n\n  if (action.type === SET_LOADING_STATE_FALSE) {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isLoading = false;\n    return newState;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Lottery/store/reducer.tsx"],"names":["defaultState","luckyDrawTx","error","addressTx","loadingState","isLoading","GET_LUCKY_DRAW_TRANSACTION_HASH","GET_ADDRESS_TRANSACTION_HASH","RESET_TO_DEFAULT_STATE","UPDATE_ERROR_MESSAGE","SET_LOADING_STATE_TRUE","SET_LOADING_STATE_FALSE","reducer","state","action","type","newState","JSON","parse","stringify","loadingReducer"],"mappings":"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","sourcesContent":["const defaultState = {\n    luckyDrawTx: \"\",\n    error: \"\",\n    addressTx: \"\",\n}\n\nconst loadingState = {\n    isLoading: false\n}\n\nexport const GET_LUCKY_DRAW_TRANSACTION_HASH = 'GET_LUCKY_DRAW_TRANSACTION_HASH'\nexport const GET_ADDRESS_TRANSACTION_HASH = \"GET_ADDRESS_TRANSACTION_HASH\"\nexport const RESET_TO_DEFAULT_STATE = \"RESET_TO_DEFAULT_STATE\"\nexport const UPDATE_ERROR_MESSAGE = \"UPDATE_ERROR_MESSAGE\"\nexport const SET_LOADING_STATE_TRUE = \"SET_LOADING_STATE_TRUE\"\nexport const SET_LOADING_STATE_FALSE = \"SET_LOADING_STATE_FALSE\"\n\nexport const reducer = (state = defaultState, action) => {\n    if (action.type === GET_LUCKY_DRAW_TRANSACTION_HASH) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.luckyDrawTx = action.luckyDrawTx\n        newState.addressTx = \"\"\n        newState.error = \"\"\n        return newState\n    }\n\n    if (action.type === UPDATE_ERROR_MESSAGE) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.luckyDrawTx = \"\"\n        newState.addressTx = \"\"\n        newState.error = action.error\n        return newState\n    }\n\n    if (action.type === GET_ADDRESS_TRANSACTION_HASH) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.luckyDrawTx = \"\"\n        newState.addressTx = action.addressTx\n        newState.error = action.error\n        return newState\n    }\n\n    if (action.type === RESET_TO_DEFAULT_STATE) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.luckyDrawTx = \"\"\n        newState.addressTx = \"\"\n        newState.error = \"\"\n        return newState\n    }\n\n    return state\n}\n\nexport const loadingReducer = (state = loadingState, action) => {\n    if (action.type === SET_LOADING_STATE_TRUE) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isLoading = true\n        return newState\n    }\n\n    if (action.type === SET_LOADING_STATE_FALSE) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isLoading = false\n        return newState\n    }\n\n    return state;\n}\n\n"]},"metadata":{},"sourceType":"module"}