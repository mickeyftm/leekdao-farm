{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Farms/components/FarmCard/HarvestAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Flex, Heading } from 'leek-uikit';\nimport useI18n from 'hooks/useI18n';\nimport { useHarvest } from 'hooks/useHarvest';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport styled from 'styled-components';\nimport useStake from '../../../../hooks/useStake';\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n_c = BalanceAndCompound;\n\nconst HarvestAction = ({\n  earnings,\n  pid\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    onReward\n  } = useHarvest(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const rawEarningsBalance = getBalanceNumber(earnings);\n  const displayBalance = rawEarningsBalance.toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawEarningsBalance === 0 ? 'textDisabled' : 'text',\n      children: displayBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n      children: [pid === 12 ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: rawEarningsBalance === 0 || pendingTx,\n        size: \"sm\",\n        variant: \"secondary\",\n        marginBottom: \"15px\",\n        onClick: async () => {\n          setPendingTx(true);\n          await onStake(rawEarningsBalance.toString());\n          setPendingTx(false);\n        },\n        children: TranslateString(999, 'Compound')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        disabled: rawEarningsBalance === 0 || pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onReward();\n          setPendingTx(false);\n        },\n        children: TranslateString(999, 'Harvest')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarvestAction, \"xbz64NzyfVJyA6YsfB8Be6WEnKA=\", false, function () {\n  return [useI18n, useHarvest, useStake];\n});\n\n_c2 = HarvestAction;\nexport default HarvestAction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BalanceAndCompound\");\n$RefreshReg$(_c2, \"HarvestAction\");","map":{"version":3,"sources":["/Users/shuowang/ETM/Leekdao/leekdao-farm/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Button","Flex","Heading","useI18n","useHarvest","getBalanceNumber","styled","useStake","BalanceAndCompound","div","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","onStake","rawEarningsBalance","displayBalance","toLocaleString","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,YAAtC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAOA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAI;AACtC;AACA;AACA;AACA;AACA,CALA;KAAMD,kB;;AAON,MAAME,aAA6C,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAuB;AAAA;;AAC3E,QAAMC,eAAe,GAAGV,OAAO,EAA/B;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAeZ,UAAU,CAACQ,GAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcV,QAAQ,CAACK,GAAD,CAA5B;AAEA,QAAMM,kBAAkB,GAAGb,gBAAgB,CAACM,QAAD,CAA3C;AACA,QAAMQ,cAAc,GAAGD,kBAAkB,CAACE,cAAnB,EAAvB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,cAAc,EAAC,eAA9B;AAA8C,IAAA,UAAU,EAAC,QAAzD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,kBAAkB,KAAK,CAAvB,GAA2B,cAA3B,GAA4C,MAA5D;AAAA,gBAAqEC;AAArE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAA,iBACGP,GAAG,KAAK,EAAR,gBACC,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEM,kBAAkB,KAAK,CAAvB,IAA4BJ,SADxC;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,YAAY,EAAC,MAJf;AAKE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAME,OAAO,CAACC,kBAAkB,CAACG,QAAnB,EAAD,CAAb;AACAN,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SATH;AAAA,kBAWGF,eAAe,CAAC,GAAD,EAAM,UAAN;AAXlB;AAAA;AAAA;AAAA;AAAA,cADD,GAcG,IAfN,eAgBE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEK,kBAAkB,KAAK,CAAvB,IAA4BJ,SADxC;AAEE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMC,QAAQ,EAAd;AACAD,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SANH;AAAA,kBAQGF,eAAe,CAAC,GAAD,EAAM,SAAN;AARlB;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAzCD;;GAAMH,a;UACoBP,O,EAEHC,U,EACDG,Q;;;MAJhBG,a;AA2CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'leek-uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport useStake from '../../../../hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        {pid === 12 ? (\n          <Button\n            disabled={rawEarningsBalance === 0 || pendingTx}\n            size=\"sm\"\n            variant=\"secondary\"\n            marginBottom=\"15px\"\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </Button>\n        ) : null}\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}